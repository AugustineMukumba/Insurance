@using Insurance.Service;
@model InsuranceClaim.Models.ListPolicy
@{
    ViewBag.Title = "My Policies";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
}



<div class="productsave-section">
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 products-top">
                <div class="head-title">
                    <h2>Policy List</h2>
                </div>
            </div>
            @*<div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 add-btn">
                    <div class="text-right">
                        <form>
                            <input class="btn btn-primary" type="button" value="Add" onclick="window.location.href='@Url.Action("Index", "CustomerRegistration")'" />
                        </form>
                    </div>
                </div*@
        </div>
        <br />
        <br />

        <br />
        <br />
        <div class="policy-table-grid-main">
            <table class="table table-striped">

                <tbody>

                    @if (Model != null)
                    {
                        if (Model.listpolicy.Count == 0)
                        {
                            <label>No Policies Found</label>
                        }
                    }

                    @foreach (var item in Model.listpolicy.ToList())
                    {



                        <tr class="policyheading-tr">

                            <th>Policy Number</th>
                            <th>Customer Name</th>
                            <th>Payment Method</th>
                            <th>Total Sum Insured</th>
                            <th>Total Premium</th>
                            

                        </tr>
                        <tr class="policynumber-tr">

                            <td>@item.PolicyNumber</td>
                            <td>@MiscellaneousService.GetCustomerNamebyID(item.CustomerId)</td>
                            <td>@MiscellaneousService.GetPaymentMethodNamebyID(item.PaymentMethodId)</td>
                            <td>$@item.TotalSumInsured</td>
                            <td>$@item.TotalPremium</td>                            
                        </tr>
                        <tr>
                            <td colspan="6">
                                <table class="policy-table-grid" style="width:100%">
                                    <tr>
                                        <th>Vehicle</th>
                                        <th>Sum Insured</th>
                                        <th>Auto-Fac Sum Insured</th>
                                        <th>AutoFac Premium</th>
                                        <th>Fac Sum Insured</th>
                                        <th>Fac Premium</th>
                                        @*<th>Reinsurance Broker</th>*@
                                        <th>Reinsurance Broker Commission</th>
                                        <th>Facultative Commission</th>
                                        <th>Status</th>
                                        <th>Actions(s)</th>
                                    </tr>
                                    @foreach (var _item in item.Vehicles)
                                    {
                                        <tr>
                                            <td>@MiscellaneousService.GetMakeNamebyMakeCode(_item.MakeId)/@MiscellaneousService.GetModelNamebyModelCode(_item.ModelId)</td>
                                            <td>$@_item.SumInsured</td>
                                            <td>$@_item.AutoFacReinsuranceAmount</td>
                                            <td>$@_item.AutoFacPremium</td>
                                            <td>$@_item.FacReinsuranceAmount</td>
                                            <td>$@_item.FacPremium</td>
                                            @*<td>@MiscellaneousService.GetReinsuranceBrokerNamebybrokerid(_item.ReinsurerBrokerId)</td>*@
                                            <td>$@_item.BrokerCommission</td>
                                            <td>$@_item.FacultativeCommission</td>
                                            @if (DateTime.Now < _item.RenewalDate.AddDays(-21))
                                            {
                                                <td>In Force</td>
                                                <td><button type="button" class="btn-sm btn-primary" onclick="showPopuppDocument('@item.PolicyNumber','@item.CustomerId','@_item.VehicleId')">View/Upload Document</button></td>
                                            }
                                            else if (DateTime.Now >= _item.RenewalDate.AddDays(-21) && DateTime.Now <= _item.RenewalDate)
                                            {
                                                <td>Renew</td>
                                                <td>@Html.ActionLink("Pay Premium", "RiskDetail", "Renew", new { id = _item.VehicleId }, new { @class = "btn-sm btn-danger", @style= "    width: 100%;    float: left;    text-align: center;" })<br /><br /><button type="button" class="btn-sm btn-primary" onclick="showPopuppDocument('@item.PolicyNumber','@item.CustomerId','@_item.VehicleId')">View/Upload Document</button></td>

                                            }
                                            else if (DateTime.Now > _item.RenewalDate)
                                            {
                                                <td>Lapsed</td>
                                                if (!_item.isLapsed)
                                                {
                                                    <td>@Html.ActionLink("Renew", "RiskDetail", "Renew", new { id = _item.VehicleId }, new { @class = "btn-sm btn-danger", @style = "    width: 100%;    float: left;    text-align: center;" })</td>
                                                }

                                            }

                                        </tr>
                                    }
                                </table>
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>

</div>





<div class="modal fade" id="mymodals" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p style="text-align: center;color: #00bcea;font-weight: bold;">Are you sure you want to delete this?</p>
            </div>
            <div class="modal-footer">
                <button type="button" id="deleteBtn" class="btn btn-danger" onclick="ConfirmDelete()">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="mymodals2" role="dialog">
    @*@using (Html.BeginForm("UploadFile", "Upload", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {*@
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <label>Document List</label>
            </div>
            <div class="modal-body">
                <div class="tblfilelisting-grid">
                    <table id="tblfileListing" class="table table-striped">
                        <thead>
                            <tr>
                                @*<th>Serial No</th>*@
                                <th style="width:100px">Title</th>
                                <th>Description</th>
                                <th style="width:100px">Action(s)</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <ul id="fileListUL"></ul>

                    <br />
                </div>
                <div>
                    <table style="width:100%">
                        <tr>
                            <td style="padding: 6px;">Title</td>
                            <td style="padding: 6px;"><input class="form-control" id="txt" type="text" name="Textbox" /></td>

                        </tr>
                        <tr>
                            <td style="padding: 6px;">Description</td>
                            <td style="padding: 6px;"><textarea class="form-control" id="tarea" name="message" rows="2" cols="20"></textarea></td>
                        </tr>
                        <tr>
                            <td style="padding: 6px;">File</td>
                            <td style="padding: 6px;"><input type="file" id="file_Uploader"  accept=".doc,.docx,.xml,.PDF,.XLSX," /></td>
                        </tr>
                    </table>
                </div>

                <div>

                </div>


            </div>
            <div class="modal-footer">
                <input type="button" id="documnet" value="Upload" class="btn btn-primary" />

                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
    @Html.Hidden("PolicyNumber")
    @Html.Hidden("CustomerId")
    @Html.Hidden("vehicleId")
</div>


<script>

    function uploadFile() {
        debugger;

        if ($("#txt").val() == "") {
            toastr.error("No Title selected");
            return false;
        }
        if (document.getElementById("file_Uploader").files.length == 0) {
            //alert("No files selected");
            toastr.error("No files selected");


            return false;
        }
        else {
            if (window.FormData !== undefined) {
                debugger;
                var fileUpload = $("#file_Uploader").get(0);
                var files = fileUpload.files;
                var Filedata = new FormData();

                for (var i = 0; i < files.length; i++) {
                    Filedata.append(files[i].name, files[i]);
                }

                Filedata.append("PolicyNumber", $("#PolicyNumber").val());
                Filedata.append("CustomerId", $("#CustomerId").val());
                Filedata.append("vehicleId", $("#vehicleId").val());
                Filedata.append("Title", $("#txt").val());
                Filedata.append("Description", $("#tarea").val());



                $.ajax({
                    url: '/Account/UploadFile',
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: Filedata,
                    success: function (result) {
                        //alert(result);

                        $("#txt").val("");
                        $("#tarea").val("");
                        $("#file_Uploader").val('')

                        toastr.success(result);

                        getFiles();



                    },
                    error: function (err) {
                        toastr.error(err.statusText);
                    }
                });
            }
            else {
                //alert("FormData is not supported.");
            }
        }
    }

    $(document).ready(function () {
        debugger;
        $("#tblfileListing").hide();
        $("#documnet").click(function () {
            debugger;

            uploadFile();
        })
    })

    function DeleteConfirm(docid) {
        debugger;
        if (confirm("Are You Sure Delete This File")) {

            var Filedata = new FormData();
            Filedata.append("docid", docid);

            $.ajax({
                url: '/Account/DeleteDocument',
                type: "POST",
                contentType: false,
                processData: false,
                data: Filedata,
                success: function (result) {
                    if (result) {
                        toastr.success("File Deleted Successfully");
                    }
                    else {
                        toastr.error("File was not Deleted. Please Try Again !!");
                    }
                    getFiles();

                },
                error: function (err) {
                    toastr.error(err.statusText);
                }
            });

        }
        return false;
    }

    function showPopuppDocument(PolicyNumber, CustomerId, vehicleId) {
        debugger;
        $("#PolicyNumber").val(PolicyNumber);
        $("#CustomerId").val(CustomerId);
        $("#vehicleId").val(vehicleId);

        getFiles();

        $("#txt").val("");
        $("#tarea").val("");
        $("#file_Uploader").val('')

        //$("#mymodals").modal("show");

        $("#mymodals2").modal("show");

    };

    function getFiles() {

        var Filedata = new FormData();
        Filedata.append("PolicyNumber", $("#PolicyNumber").val());
        Filedata.append("CustomerId", $("#CustomerId").val());
        Filedata.append("vehicleId", $("#vehicleId").val());
        $("#tblfileListing tbody").empty();
        debugger;
        $.ajax({

            url: '/Account/GetUplodedFiles',
            type: "POST",
            contentType: false,
            processData: false,
            data: Filedata,
            success: function (result) {
                $("#tblfileListing").show();
                for (var i = 0; i < result.length; i++) {
                    $("#tblfileListing tbody").append('<tr><td>' + result[i].Title + '</td><td>' + result[i].Decription + '</td><td><a href=' + result[i].FilePath + ' class = "glyphicon glyphicon-download-alt"></a><a style="margin-left: 15px;" href = "" class ="glyphicon glyphicon-trash" onclick = "return DeleteConfirm(' + result[i].id + ')"></a></td></tr>');
                }
                if (result.length == 0) {
                    $("#tblfileListing tbody").append('<tr><td colspan=3> Records not found</td></tr>');
                    toastr.error("Records not found");
                }
               
            },
            error: function (err) {
                //alert(err.statusText);
            }
        });
    }

    function removeSearchBoxText() {
        window.location.href = "/Account/PolicyList";

    }

</script>

<script>

    let CoverListId;
    function showPopupp(Id) {
        debugger;
        $("#mymodals").modal("show");
        CoverListId = Id;
    }
    function ConfirmDelete() {
        debugger;
        var url = '@Url.Action("DeleteRoleManagement", "Account", new {Id=1021 })';
        var newurl = url.replace("1021", CoverListId);
        window.location.href = newurl;
    }

</script>
