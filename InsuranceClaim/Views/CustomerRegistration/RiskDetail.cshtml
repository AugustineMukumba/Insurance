@model InsuranceClaim.Models.RiskDetailModel
@{
    ViewBag.Title = "RiskDetail";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
}


<div class="top-banner-section">
    <div class="container">
        <div class="car-insurance-content">
            <h2>Get Car Insurance In Less<br>Than 5 Minutes<h2>
        </div>
    </div>
</div>
<div class="body-content-section">
    <div class="Process-step-section">
        <div class="container">
            <div class="row bs-wizard">
                <div class="process-block">
                    <div class="col-xs-2 bs-wizard-step complete">
                        <div class="progress"><div class="progress-bar"></div></div>
                        <a href="#" class="bs-wizard-dot"></a>
                        <div class="text-center bs-wizard-stepnum">Client Details</div>
                    </div>

                    <div class="col-xs-2 bs-wizard-step complete">
                        <!-- complete -->
                        <div class="progress"><div class="progress-bar"></div></div>
                        <a href="#" class="bs-wizard-dot"></a>
                        <div class="text-center bs-wizard-stepnum">Product Details</div>
                    </div>

                    <div class="col-xs-2 bs-wizard-step active">
                        <!-- complete -->
                        <div class="progress"><div class="progress-bar"></div></div>
                        <a href="#" class="bs-wizard-dot"></a>
                        <div class="text-center bs-wizard-stepnum">Risk Details</div>
                    </div>

                    <div class="col-xs-2 bs-wizard-step disabled">
                        <!-- active -->
                        <div class="progress"><div class="progress-bar"></div></div>
                        <a href="#" class="bs-wizard-dot"></a>
                        <div class="text-center bs-wizard-stepnum">Summary Details</div>
                    </div>

                    <div class="col-xs-2 bs-wizard-step disabled">
                        <!-- active -->

                        <div class="progress"><div class="progress-bar"></div></div>
                        <a href="#" class="bs-wizard-dot"></a>
                        <div class="text-center bs-wizard-stepnum">Payment Details</div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="form-section-top">
        <div class="container">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 form-section-col">

                    @using (Html.BeginForm("GenerateQuote", "CustomerRegistration"))
                    {
                        <div>
                            @Html.HiddenFor(m => m.PolicyId)
                            @Html.HiddenFor(m => m.Id)
                        </div>
                        <div class="form-group-section">
                            <div class="form-title">
                                <h4>Risk Details</h4>
                            </div>
                            <div class="form-group-input">
                                <div id="contact-form" class="contact-form">
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("No Of Cars Covered", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.NoOfCarsCovered, new
                                           {
                                               @placeholder = "Number of Cars Covered",
                                               @autocomplete = "off",
                                               @class = "form-control",
                                               @maxlength = "2",
                                               Value = "1",
                                               @readonly = "readonly"
                                           })
                                                @Html.ValidationMessageFor(m => m.NoOfCarsCovered, "", new { @class = "text-danger" })
                                                @Html.ValidationMessageFor(m => m.NoOfCarsCovered, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Registration No", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.RegistrationNo, new { @class = "form-control", @autocomplete = "off", @placeholder = "Vehicle Registration Number" })
                                                @Html.ValidationMessageFor(m => m.RegistrationNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Make", new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.MakeId, new SelectList(ViewBag.Makers, "MakeCode", "MakeDescription"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Model", new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.ModelId, new SelectList(ViewBag.Model, "ModelCode", "ModelDescription"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Cubic Capacity", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.CubicCapacity, new { @class = "form-control", @autocomplete = "off", @placeholder = "Cubic Capacity", @maxlength = "4" })
                                                @Html.ValidationMessageFor(m => m.CubicCapacity, "", new { @class = "text-danger" })
                                                @*@Html.ValidationMessageFor(m => m.CubicCapacity, "", new { @class = "text-danger" })*@
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Vehicle Year", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.VehicleYear, new { @class = "form-control", @autocomplete = "off", @placeholder = "Vehicle year", @maxlength = "4" })
                                                @Html.ValidationMessageFor(m => m.VehicleYear, "", new { @class = "text-danger" })
                                                @*@Html.ValidationMessageFor(m => m.VehicleYear, "", new { @class = "text-danger" })*@
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Engine Number", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.EngineNumber, new { @class = "form-control", @autocomplete = "off", @placeholder = "Engine Number" })
                                                @Html.ValidationMessageFor(m => m.EngineNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Chasis Number", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.ChasisNumber, new { @class = "form-control", @autocomplete = "off", @placeholder = "Chassis Number" })
                                                @Html.ValidationMessageFor(m => m.ChasisNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Vehicle Usage", new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.VehicleUsage, new SelectList(ViewBag.VehicleUsage, "Id", "VehUsage"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Cover Type", new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.CoverTypeId, new SelectList(ViewBag.CoverType, "id", "Name"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                   

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Suggested Value", new { @class = "gender-label" })
                                                @Html.TextBox("VehicleSumInsures", null, new { @class = "form-control", @autocomplete = "off", @placeholder = "Suggested Value", @maxlength = "5" })
                                                @*@Html.ValidatiVehicleSumInsuresonMessageFor(m => m.SumInsured, "", new { @class = "text-danger" })*@
                                                @* @Html.ValidationMessageFor(m => m.SumInsured, "", new { @class = "text-danger" })*@

                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Sum Insured", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.SumInsured, new { @class = "form-control", @autocomplete = "off", @placeholder = "Vehicle Sum Insured", @maxlength = "11" })
                                                <span class="text-danger" id="validationSumIns">Please Enter Sum Insured</span>
                                                @*@Html.ValidationMessageFor(m => m.SumInsured, "", new { @class = "text-danger" })*@
                                                @*@Html.ValidationMessageFor(m => m.SumInsured, "", new { @class = "text-danger" })*@
                                            </div>
                                        </div>

                                    </div>
                                    <div id="thridparty" class="row">
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div id="thirdpartycheck" class="form-group">
                                                @Html.Label("ADD THIRD PARTY INSURANCE", new { @class = "gender-label" })
                                                @Html.CheckBoxFor(x => x.Addthirdparty)
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Add Third Party Amount", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.AddThirdPartyAmount, new { @class = "form-control", @autocomplete = "off", @placeholder = "Add Third Party Amount", @disabled = "disabled" })
                                                @* @Html.TextBoxFor(x => x.AddThirdPartyAmount, new { @class = "form-control", @autocomplete = "off", @placeholder = "Chassis Number" })*@
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Cover Start Date", new { @class = "gender-label" })
                                                <div class='input-group date' id='datetimepicker1'>
                                                    @Html.TextBoxFor(m => m.CoverStartDate, new { @class = "form-control", @autocomplete = "off", @placeholder = "Vehicle Cover Start Date" })
                                                    @Html.ValidationMessageFor(m => m.CoverEndDate, "", new { @class = "text-danger" })
                                                    <span class="input-group-addon">
                                                        <span class="glyphicon glyphicon-calendar"></span>

                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Cover End Date", new { @class = "gender-label" })
                                                <div class='input-group date' id='datetimepicker2'>
                                                    @Html.TextBoxFor(m => m.CoverEndDate, new { @class = "form-control", @autocomplete = "off", @placeholder = "Vehicle Cover End Date" })
                                                    @Html.ValidationMessageFor(m => m.CoverEndDate, "", new { @class = "text-danger" })
                                                    <span class="input-group-addon">
                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Premium", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.Premium, new { @class = "form-control", @autocomplete = "off", @placeholder = "Vehicle Premium", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Agent Commission", new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.AgentCommissionId, new SelectList(ViewBag.AgentCommission, "Id", "CommissionName"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Stamp Duty", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.StampDuty, new { @class = "form-control", @autocomplete = "off", @placeholder = "Stamp Duty", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.StampDuty, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("ZTSC Levy", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.ZTSCLevy, new { @class = "form-control", @autocomplete = "off", @placeholder = "ZTSC Levy", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.ZTSCLevy, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    



                                    @*<div class="col-sm-6 col-md-6 form-group-text">
                                                    <div class="form-group">
                                                        @Html.Label("Optional Covers", new { @class = "gender-label" })
                                                        @Html.TextBoxFor(m => m.OptionalCovers, new { @class = "form-control", @autocomplete = "off", @placeholder = "Additional/Optional Covers", @maxlength = "5" })
                                                        @Html.ValidationMessageFor(m => m.OptionalCovers, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                        </div>*@

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Excess Type", new { @class = "gender-label" })
                                                <select name="ExcessType" class="form-control" id="ExcessType">
                                                    <option value="1">Percent Age</option>
                                                    <option value="2">Fixed Amount</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Excess", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.Excess, new { @class = "form-control", @autocomplete = "off", @placeholder = "Excess", maxlength = "5" })
                                            </div>
                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Radio License Cost", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.RadioLicenseCost, new { @class = "form-control", @autocomplete = "off", @placeholder = "Vehicle Radio Licence Cost", @maxlength = "5" })
                                                @Html.ValidationMessageFor(m => m.RadioLicenseCost, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group margin-0">
                                                @Html.Label("Optional Covers", new { @class = "gender-label" })
                                            </div>
                                            <div class="form-group-list">
                                                <ul class="list-inline">
                                                    <li>
                                                        @Html.CheckBoxFor(x => x.PassengerAccidentCover)
                                                        @Html.Label("Passenger Accident Cover", new { @class = "gender-label" })


                                                    </li>
                                                    <li>
                                                        @Html.CheckBoxFor(x => x.ExcessBuyBack)
                                                        @Html.Label("Excess BuyBack", new { @class = "gender-label" })

                                                    </li>
                                                    <li>
                                                        @Html.CheckBoxFor(x => x.RoadsideAssistance)
                                                        @Html.Label("Roadside Assistance", new { @class = "gender-label" })

                                                    </li>
                                                    <li>
                                                        @Html.CheckBoxFor(x => x.MedicalExpenses)
                                                        @Html.Label("Medical Expenses", new { @class = "gender-label" })

                                                    </li>
                                                </ul>

                                            </div>

                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Want the licence disk to be delivered ?", new { @class = "gender-label" })
                                                @Html.CheckBoxFor(x=>x.IsLicenseDiskNeeded)
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text" id="Containernumberofpersons">
                                            <div class="form-group">
                                                @Html.Label("Number of Persons", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x=>x.NumberofPersons,null, new { @class = "form-control", @autocomplete = "off", @placeholder = "Number of Persons", @disabled = "disabled" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12 next-btn">
                                            <div class="row">
                                                <div class="col-sm-6 col-md-6">
                                                    <div class="text-left">
                                                        <div class="back-left"><button type="button" onclick="gotoPeriviouse()" class="btn">Back</button></div>
                                                        <a style="display:none" id="previouselink" href="/CustomerRegistration/ProductDetail" class="back"></a>
                                                    </div>
                                                </div>

                                                <div class="col-sm-6 col-md-6">
                                                    <div class="text-right">
                                                        <button type="submit" id="btnGenerateQuote" class="btn">Generate Quote</button>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function gotoPeriviouse() {
        $("#previouselink")[0].click();

    }
</script>
@*<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">

    <link href="//cdn.rawgit.com/Eonasdan/bootstrap-datetimepicker/e8bddc60e73c1ec2475f827be36e1957af72e2ea/build/css/bootstrap-datetimepicker.css" rel="stylesheet">*@

<!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
<!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
<![endif]-->
@*<script type="text/javascript" src="//code.jquery.com/jquery-2.1.1.min.js"></script>
    <script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment-with-locales.js"></script>
    <script src="//cdn.rawgit.com/Eonasdan/bootstrap-datetimepicker/e8bddc60e73c1ec2475f827be36e1957af72e2ea/src/js/bootstrap-datetimepicker.js"></script>*@


<script type="text/javascript">


    $(document).ready(function () {
        if ($("#PassengerAccidentCover").is(":checked")) {
            debugger;

            $("#NumberofPersons").removeAttr("disabled", "disabled");
        }
        else {
            $("#NumberofPersons").attr("disabled", "disabled");
        }


        ////////////////////////

        if ($("#Addthirdparty").is(":checked")) {
            debugger;

            $("#AddThirdPartyAmount").removeAttr("disabled", "disabled");
        }
        else {
            $("#AddThirdPartyAmount").attr("disabled", "disabled");
        }


     
           








            $("#validationSumIns").css("display", "none");

            $("#btnGenerateQuote").click(function () {

                var coverselected = $("#CoverTypeId option:selected").val();
                if (coverselected == "1" && $("#SumInsured").val() == "") {
                    $("#validationSumIns").css("display", "block");
                    return false;
                }
                else {
                    $("#validationSumIns").css("display", "none");
                }

            });


        });


        ////////////////////


        $(function () { // will trigger when the document is ready
            debugger;
            //$('#datetimepicker1,#datetimepicker2,#datetimepicker3,#datetimepicker4').datetimepicker({
            //    format: 'MM/D/YYYY',

            //});



            $("#MakeId").change(function () {
                $.ajax({
                    url: "@Url.Action("GetVehicleModel", "CustomerRegistration")",
                    type: "POST",
                    data: { makeCode: $("#MakeId").val() },
                    dataType: "json",
                    success: function (result) {
                        debugger;
                        var $dropdown = $("#ModelId");
                        $dropdown.empty();
                        $.each(result, function () {
                            $dropdown.append($("<option />").val(this.ModelCode).text(this.ModelDescription));
                        });
                    }
                });
            });



            $("#SumInsured").blur(function () {

                QuoteCalculation();
            });

            $("#Excess").blur(function () {

                QuoteCalculation();
            });
            $("#ExcessType").change(function () {

                QuoteCalculation();
            });
            $("#VehicleUsage").change(function () {

                QuoteCalculation();
            });
            $("#CoverTypeId").change(function () {

                QuoteCalculation();
            });
            $("#AddThirdPartyAmount").blur(function () {

                QuoteCalculation();
            });
            $("#NumberofPersons").blur(function () {

                QuoteCalculation();
            });

            $("#ExcessBuyBack").click(function () {
                QuoteCalculation();
            });

            $("#RoadsideAssistance").click(function () {
                QuoteCalculation();
            });

            $("#MedicalExpenses").click(function () {
                QuoteCalculation();
            });
           
            

            //called when key is pressed in textbox
            $("#NoOfCarsCovered,#CubicCapacity,#VehicleYear,#VehicleSumInsures,#SumInsured,#RadioLicenseCost,#OptionalCovers,#Excess").keypress(function (e) {
                //if the letter is not digit then display error and don't type anything
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    //display error message
                    //$("#errmsg").html("Digits Only").show().fadeOut("slow");
                    return false;
                }
            });
        });


        function replacableRedirect() {
            window.location.href = "@Url.Action("SummaryDetail", "CustomerRegistration")";
        }
        function QuoteCalculation() {
            debugger;
            if ($("#SumInsured").val() == "") {
                $("#SumInsured").val("0");
            }
            var sumInsured = parseFloat($("#SumInsured").val());
            if (sumInsured < 1) {
                //return false;
            }
            var vehicleUsageId = parseInt($("#VehicleUsage").val());
            if (vehicleUsageId < 1) {
                return false;
            }
            var coverType = parseInt($("#CoverTypeId").val());
            if (coverType < 1) {
                return false;
            }
            var excessType = parseInt($("#ExcessType").val());
            var excess;
            if ($("#Excess").val() == "") {
                excess = 0;
            }
            else {
                excess = parseFloat($("#Excess").val())
            }
            var AddThirdPartyAmount = parseFloat($("#AddThirdPartyAmount").val());
            var NumberofPersons = parseInt($("#NumberofPersons").val());
            var PassengerAccidentCover = $("#PassengerAccidentCover").is(":checked");
            var ExcessBuyBack = $("#ExcessBuyBack").is(":checked");
            var RoadsideAssistance = $("#RoadsideAssistance").is(":checked");
            var MedicalExpenses = $("#MedicalExpenses").is(":checked");
            var Addthirdparty = $("#Addthirdparty").is(":checked");

            if (NumberofPersons == undefined || NumberofPersons == null || NumberofPersons == "") {
                NumberofPersons = 0;
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("CalculatePremium", "CustomerRegistration")",
                data: { vehicleUsageId: vehicleUsageId, sumInsured: sumInsured, coverType: coverType, excessType: excessType, excess: excess, AddThirdPartyAmount: AddThirdPartyAmount, NumberofPersons: NumberofPersons, Addthirdparty: Addthirdparty, PassengerAccidentCover: PassengerAccidentCover, ExcessBuyBack: ExcessBuyBack, RoadsideAssistance: RoadsideAssistance, MedicalExpenses: MedicalExpenses },
                success: function (data) {
                    debugger;
                    $("#Premium").val(data.Premium);
                    $("#StampDuty").val(data.StamDuty);
                    $("#ZTSCLevy").val(data.ZtscLevy);
                    //$("#NumberofPersons").val(data.NumberofPersons);
                    //$("#AddThirdPartyAmount").val(data.AddThirdPartyAmount);

                    if (data.Status == false) {
                        toastr.warning(data.Message);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    if (textStatus == 'timeout') {
                        //doe iets
                    } else if (textStatus == 'error') {
                        //doe iets
                    }
                } //EINDE error
            }); //EINDE ajax




        }
        $("#CoverTypeId").on('change', function () {
            debugger;
            var coverytype = $('#CoverTypeId option:selected').val();
            if (coverytype != 1) {

                $("#thridparty").hide();
            }
            else {

                $("#thridparty").show();

            }
        });





        $('#Addthirdparty').change(function () {
            debugger;
            if ($(this).is(':checked')) {
                $("#AddThirdPartyAmount").removeAttr("disabled");


            }
            else {
                $("#AddThirdPartyAmount").attr("disabled", "disabled");
                $("#AddThirdPartyAmount").val("0")
            }
        })


        $('#PassengerAccidentCover').change(function () {
            debugger;
            if ($(this).is(':checked')) {
                $("#NumberofPersons").removeAttr("disabled");


            }
            else {
                $("#NumberofPersons").attr("disabled", "disabled");
                $("#NumberofPersons").val("0");
            }
        })
    
</script>
